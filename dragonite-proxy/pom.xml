<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
	  <groupId>com.vecsight.dragonite</groupId>
	  <artifactId>dragonite-parent</artifactId>
      <version>0.5.0-SNAPSHOT</version>
  </parent>
  <groupId>com.vecsight.dragonite</groupId>
  <artifactId>dragonite-proxy</artifactId>
  <version>0.5.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>co.paralleluniverse</groupId>
      <artifactId>quasar-core</artifactId>
      <classifier>jdk8</classifier>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.github/bucket4j -->
    <dependency>
      <groupId>com.github.vladimir-bukhtoyarov</groupId>
      <artifactId>bucket4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.tinylog</groupId>
      <artifactId>tinylog</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    <dependency>
      <groupId>com.eclipsesource.minimal-json</groupId>
      <artifactId>minimal-json</artifactId>
    </dependency>



    <dependency>
      <groupId>com.vecsight.dragonite</groupId>
      <artifactId>dragonite-utils</artifactId>
    </dependency>

    <dependency>
      <groupId>com.vecsight.dragonite</groupId>
      <artifactId>dragonite-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vecsight.dragonite</groupId>
      <artifactId>dragonite-mux</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!--<pluginRepositories>-->
    <!--<pluginRepository>-->
      <!--<id>spring-milestone</id>-->
      <!--<name>Spring Milestones</name>-->
      <!--<url>http://repo.spring.io/plugins-release</url>-->
    <!--</pluginRepository>-->
  <!--</pluginRepositories>-->

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!--
          Compile-time (AoT) instrumentation; use _either_ AoT or agent-based, not both
      -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>

          <execution>
            <id>instrument-classes</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <property name="ant_classpath" refid="maven.dependency.classpath"/>
                <taskdef name="instrumentationTask" classname="co.paralleluniverse.fibers.instrument.InstrumentationTask"
                         classpath="${ant_classpath}"/-->
                <!-- Use "allowMonitors" to allow instrumenting methods containing synchronization -->
                <!-- instrumentationTask allowMonitors="true" -->
                <!--instrumentationTask>
                  <fileset dir="${project.build.directory}/classes/" includes="**/*.class"/>
                </instrumentationTask>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>instrument-test-classes</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="ant_classpath" refid="maven.dependency.classpath"/>
                <taskdef name="instrumentationTask" classname="co.paralleluniverse.fibers.instrument.InstrumentationTask"
                         classpath="${ant_classpath}"/-->
                <!-- Use "allowMonitors" to allow instrumenting methods containing synchronization -->
                <!-- instrumentationTask allowMonitors="true" -->
                <!--instrumentationTask>
                  <fileset dir="${project.build.directory}/test-classes/" includes="**/*.class"/>
                </instrumentationTask>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->

      <!-- Collecting classpath entries as properties in the form groupId:artifactId:type:[classifier]
           as per http://maven.apache.org/plugins/maven-dependency-plugin/properties-mojo.html -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>getClasspathFilenames</id>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId> <!-- Run with "mvn compile maven-dependency-plugin:properties exec:exec" -->

        <configuration>
          <mainClass>com.vecsight.dragonite.proxy.CLIMain</mainClass>
          <workingDirectory>target/classes</workingDirectory>
          <executable>java</executable>
          <arguments>
              <argument>-Djava.util.concurrent.ForkJoinPool.common.parallelism=200</argument>
            <!-- Debug -->
            <!-- argument>-Xdebug<argument -->
            <!-- argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005<argument -->
            
            <!-- Configure memory settings as needed -->
            <!-- argument>-Xmx1000m</argument -->

            <!--
                Agent-based runtime instrumentation; use _either_ AoT or agent-based, not both
            -->

            <!-- Turn off before production -->
            <argument>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argument>

            <!-- Enable if using compile-time (AoT) instrumentation -->
            <!-- argument>-Dco.paralleluniverse.fibers.disableAgentWarning</argument -->

            <!-- Quasar Agent for JDK 7 -->
            <!-- argument>-javaagent:${co.paralleluniverse:quasar-core:jar}</argument-->

            <!-- Quasar Agent for JDK 8 -->
            <argument>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}=bmc</argument> <!-- Add "=b" to force instrumenting blocking calls like Thread.sleep() -->

            <!-- Classpath -->
            <argument>-classpath</argument> <classpath/>

            <!-- Main class -->
            <argument>com.vecsight.dragonite.proxy.CLIMain</argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <!-- Debug --> <!-- -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -->

          <!-- Configure memory settings as needed -->
          <!-- argLine>-Xmx1000m</argLine -->

          <!--
              Agent-based runtime instrumentation, for tests; use _either_ AoT or agent-based, not both
          -->

          <!-- Turn off before production -->
          <argLine>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argLine>

          <!-- Enable if using compile-time (AoT) instrumentation -->
          <!-- argLine>-Dco.paralleluniverse.fibers.disableAgentWarning</argLine -->

          <!-- Quasar Agent for JDK 7 -->
          <!-- argLine>-javaagent:${co.paralleluniverse:quasar-core:jar}</argLine-->

          <!-- Quasar Agent for JDK 8 -->
          <argLine>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}</argLine>
        </configuration>
      </plugin>




        <!-- BUILD CAPSULES EXAMPLE -->
        <plugin>
            <groupId>sg.enixsoft</groupId>
            <artifactId>capsule-maven-plugin</artifactId>
            <version>${capsule.maven.plugin.version}</version>
            <configuration>

                <!-- REQUIRED -->
                <appClass>com.vecsight.dragonite.proxy.CLIMain</appClass>

                <type>fat</type>

                <execPluginConfig>root</execPluginConfig>
                <customDescriptor>-cap</customDescriptor>

                <properties>
                    <property>
                        <key>propertyName1</key>
                        <value>propertyValue1</value>
                    </property>
                    <property>
                        <key>propertyName2</key>
                        <!-- empty value is ok -->
                    </property>
                </properties>

                <manifest>
                    <entry>
                        <key>JVM-Args</key>
                        <value>-Xmx512m</value>
                    </entry>
                    <entry>
                        <key>Java-Agents</key>
                        <value>quasar-core-0.7.10-jdk8.jar</value>
                    </entry>
                    <entry>
                        <key>Repositories</key>
                        <value>local central</value>
                    </entry>
                </manifest>

            </configuration>
            <!-- BUILD CAPSULES AUTOMATICALLY AT PACKAGE PHASE -->
            <executions>
                <execution>
                    <goals>
                        <goal>build</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
        <!--use for detect suspendable classes-->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
                <execution>
                    <id>instrument-suspendables</id>
                    <phase>compile</phase>
                    <configuration>
                        <target>
                            <property name="ant_classpath" refid="maven.dependency.classpath"/>
                            <taskdef name="scanSuspendables"
                                     classname="co.paralleluniverse.fibers.instrument.SuspendablesScanner"
                                     classpath="${ant_classpath}"/>
                            <scanSuspendables auto="true"
                                              suspendablesFile="target/resources/META-INF/suspendables">
                            </scanSuspendables>
                        </target>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                </execution>

                <execution>
                    <id>instrument-classes</id>
                    <phase>compile</phase>
                    <configuration>
                        <tasks>
                            <property name="ant_classpath" refid="maven.dependency.classpath"/>
                            <taskdef name="instrumentationTask"
                                     classname="co.paralleluniverse.fibers.instrument.InstrumentationTask"
                                     classpath="${ant_classpath}"/>
                            <!-- Use "allowMonitors" to allow instrumenting methods containing synchronization -->
                            <instrumentationTask allowMonitors="true" allowBlocking="true" check="true" verbose="true" debug="true">
                                <fileset dir="${project.build.directory}/classes/" includes="**/*.class"/>
                            </instrumentationTask>
                        </tasks>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

    </plugins>
  </build>
</project>
